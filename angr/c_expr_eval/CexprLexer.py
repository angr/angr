# Generated from Cexpr.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,543,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,
        13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,
        19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,
        25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,
        30,1,30,1,31,1,31,1,32,1,32,1,32,5,32,234,8,32,10,32,12,32,237,9,
        32,1,33,1,33,3,33,241,8,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,257,8,36,1,37,1,37,1,37,1,
        37,1,37,1,38,1,38,1,38,3,38,267,8,38,1,39,1,39,3,39,271,8,39,1,39,
        1,39,3,39,275,8,39,1,39,1,39,3,39,279,8,39,1,39,3,39,282,8,39,1,
        40,1,40,1,40,4,40,287,8,40,11,40,12,40,288,1,41,1,41,5,41,293,8,
        41,10,41,12,41,296,9,41,1,42,1,42,5,42,300,8,42,10,42,12,42,303,
        9,42,1,43,1,43,4,43,307,8,43,11,43,12,43,308,1,44,1,44,1,44,1,45,
        1,45,1,46,1,46,1,47,1,47,1,48,1,48,3,48,322,8,48,1,48,1,48,1,48,
        1,48,1,48,3,48,329,8,48,1,48,1,48,3,48,333,8,48,3,48,335,8,48,1,
        49,1,49,1,50,1,50,1,51,1,51,1,51,1,51,3,51,345,8,51,1,52,1,52,3,
        52,349,8,52,1,53,1,53,3,53,353,8,53,1,53,3,53,356,8,53,1,53,1,53,
        1,53,3,53,361,8,53,3,53,363,8,53,1,54,1,54,1,54,3,54,368,8,54,1,
        54,1,54,3,54,372,8,54,1,55,3,55,375,8,55,1,55,1,55,1,55,1,55,1,55,
        3,55,382,8,55,1,56,1,56,3,56,386,8,56,1,56,1,56,1,57,1,57,1,58,4,
        58,393,8,58,11,58,12,58,394,1,59,3,59,398,8,59,1,59,1,59,1,59,1,
        59,1,59,3,59,405,8,59,1,60,1,60,3,60,409,8,60,1,60,1,60,1,61,4,61,
        414,8,61,11,61,12,61,415,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,3,63,442,8,63,1,64,4,64,445,8,64,11,64,12,64,446,
        1,65,1,65,3,65,451,8,65,1,66,1,66,1,66,1,66,3,66,457,8,66,1,67,1,
        67,1,67,1,68,1,68,1,68,3,68,465,8,68,1,68,3,68,468,8,68,1,69,1,69,
        1,69,1,69,4,69,474,8,69,11,69,12,69,475,1,70,1,70,3,70,480,8,70,
        1,70,1,70,1,71,1,71,1,71,3,71,487,8,71,1,72,4,72,490,8,72,11,72,
        12,72,491,1,73,1,73,1,73,1,73,1,73,1,73,1,73,3,73,501,8,73,1,74,
        4,74,504,8,74,11,74,12,74,505,1,74,1,74,1,75,1,75,3,75,512,8,75,
        1,75,3,75,515,8,75,1,75,1,75,1,76,1,76,1,76,1,76,5,76,523,8,76,10,
        76,12,76,526,9,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,5,
        77,537,8,77,10,77,12,77,540,9,77,1,77,1,77,1,524,0,78,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,0,69,0,71,0,73,0,75,
        0,77,34,79,0,81,0,83,0,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,
        0,103,0,105,0,107,0,109,0,111,0,113,0,115,0,117,35,119,0,121,0,123,
        0,125,0,127,0,129,0,131,0,133,0,135,0,137,0,139,0,141,36,143,0,145,
        0,147,0,149,37,151,38,153,39,155,40,1,0,20,3,0,65,90,95,95,97,122,
        1,0,48,57,2,0,66,66,98,98,1,0,48,49,2,0,88,88,120,120,1,0,49,57,
        1,0,48,55,3,0,48,57,65,70,97,102,2,0,85,85,117,117,2,0,76,76,108,
        108,2,0,69,69,101,101,2,0,43,43,45,45,2,0,80,80,112,112,4,0,70,70,
        76,76,102,102,108,108,4,0,10,10,13,13,39,39,92,92,10,0,34,34,39,
        39,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,118,3,0,
        76,76,85,85,117,117,4,0,10,10,13,13,34,34,92,92,2,0,9,9,32,32,2,
        0,10,10,13,13,564,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,77,1,0,0,
        0,0,117,1,0,0,0,0,141,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,
        1,0,0,0,0,155,1,0,0,0,1,157,1,0,0,0,3,159,1,0,0,0,5,161,1,0,0,0,
        7,163,1,0,0,0,9,165,1,0,0,0,11,167,1,0,0,0,13,169,1,0,0,0,15,171,
        1,0,0,0,17,174,1,0,0,0,19,176,1,0,0,0,21,179,1,0,0,0,23,182,1,0,
        0,0,25,185,1,0,0,0,27,187,1,0,0,0,29,189,1,0,0,0,31,191,1,0,0,0,
        33,193,1,0,0,0,35,195,1,0,0,0,37,197,1,0,0,0,39,199,1,0,0,0,41,202,
        1,0,0,0,43,205,1,0,0,0,45,207,1,0,0,0,47,209,1,0,0,0,49,211,1,0,
        0,0,51,213,1,0,0,0,53,215,1,0,0,0,55,217,1,0,0,0,57,219,1,0,0,0,
        59,222,1,0,0,0,61,225,1,0,0,0,63,228,1,0,0,0,65,230,1,0,0,0,67,240,
        1,0,0,0,69,242,1,0,0,0,71,244,1,0,0,0,73,256,1,0,0,0,75,258,1,0,
        0,0,77,266,1,0,0,0,79,281,1,0,0,0,81,283,1,0,0,0,83,290,1,0,0,0,
        85,297,1,0,0,0,87,304,1,0,0,0,89,310,1,0,0,0,91,313,1,0,0,0,93,315,
        1,0,0,0,95,317,1,0,0,0,97,334,1,0,0,0,99,336,1,0,0,0,101,338,1,0,
        0,0,103,344,1,0,0,0,105,348,1,0,0,0,107,362,1,0,0,0,109,364,1,0,
        0,0,111,381,1,0,0,0,113,383,1,0,0,0,115,389,1,0,0,0,117,392,1,0,
        0,0,119,404,1,0,0,0,121,406,1,0,0,0,123,413,1,0,0,0,125,417,1,0,
        0,0,127,441,1,0,0,0,129,444,1,0,0,0,131,450,1,0,0,0,133,456,1,0,
        0,0,135,458,1,0,0,0,137,461,1,0,0,0,139,469,1,0,0,0,141,477,1,0,
        0,0,143,486,1,0,0,0,145,489,1,0,0,0,147,500,1,0,0,0,149,503,1,0,
        0,0,151,514,1,0,0,0,153,518,1,0,0,0,155,532,1,0,0,0,157,158,5,40,
        0,0,158,2,1,0,0,0,159,160,5,41,0,0,160,4,1,0,0,0,161,162,5,91,0,
        0,162,6,1,0,0,0,163,164,5,93,0,0,164,8,1,0,0,0,165,166,5,123,0,0,
        166,10,1,0,0,0,167,168,5,125,0,0,168,12,1,0,0,0,169,170,5,60,0,0,
        170,14,1,0,0,0,171,172,5,60,0,0,172,173,5,61,0,0,173,16,1,0,0,0,
        174,175,5,62,0,0,175,18,1,0,0,0,176,177,5,62,0,0,177,178,5,61,0,
        0,178,20,1,0,0,0,179,180,5,60,0,0,180,181,5,60,0,0,181,22,1,0,0,
        0,182,183,5,62,0,0,183,184,5,62,0,0,184,24,1,0,0,0,185,186,5,43,
        0,0,186,26,1,0,0,0,187,188,5,45,0,0,188,28,1,0,0,0,189,190,5,42,
        0,0,190,30,1,0,0,0,191,192,5,47,0,0,192,32,1,0,0,0,193,194,5,37,
        0,0,194,34,1,0,0,0,195,196,5,38,0,0,196,36,1,0,0,0,197,198,5,124,
        0,0,198,38,1,0,0,0,199,200,5,38,0,0,200,201,5,38,0,0,201,40,1,0,
        0,0,202,203,5,124,0,0,203,204,5,124,0,0,204,42,1,0,0,0,205,206,5,
        94,0,0,206,44,1,0,0,0,207,208,5,33,0,0,208,46,1,0,0,0,209,210,5,
        126,0,0,210,48,1,0,0,0,211,212,5,63,0,0,212,50,1,0,0,0,213,214,5,
        58,0,0,214,52,1,0,0,0,215,216,5,59,0,0,216,54,1,0,0,0,217,218,5,
        44,0,0,218,56,1,0,0,0,219,220,5,61,0,0,220,221,5,61,0,0,221,58,1,
        0,0,0,222,223,5,33,0,0,223,224,5,61,0,0,224,60,1,0,0,0,225,226,5,
        45,0,0,226,227,5,62,0,0,227,62,1,0,0,0,228,229,5,46,0,0,229,64,1,
        0,0,0,230,235,3,67,33,0,231,234,3,67,33,0,232,234,3,71,35,0,233,
        231,1,0,0,0,233,232,1,0,0,0,234,237,1,0,0,0,235,233,1,0,0,0,235,
        236,1,0,0,0,236,66,1,0,0,0,237,235,1,0,0,0,238,241,3,69,34,0,239,
        241,3,73,36,0,240,238,1,0,0,0,240,239,1,0,0,0,241,68,1,0,0,0,242,
        243,7,0,0,0,243,70,1,0,0,0,244,245,7,1,0,0,245,72,1,0,0,0,246,247,
        5,92,0,0,247,248,5,117,0,0,248,249,1,0,0,0,249,257,3,75,37,0,250,
        251,5,92,0,0,251,252,5,85,0,0,252,253,1,0,0,0,253,254,3,75,37,0,
        254,255,3,75,37,0,255,257,1,0,0,0,256,246,1,0,0,0,256,250,1,0,0,
        0,257,74,1,0,0,0,258,259,3,95,47,0,259,260,3,95,47,0,260,261,3,95,
        47,0,261,262,3,95,47,0,262,76,1,0,0,0,263,267,3,79,39,0,264,267,
        3,105,52,0,265,267,3,127,63,0,266,263,1,0,0,0,266,264,1,0,0,0,266,
        265,1,0,0,0,267,78,1,0,0,0,268,270,3,83,41,0,269,271,3,97,48,0,270,
        269,1,0,0,0,270,271,1,0,0,0,271,282,1,0,0,0,272,274,3,85,42,0,273,
        275,3,97,48,0,274,273,1,0,0,0,274,275,1,0,0,0,275,282,1,0,0,0,276,
        278,3,87,43,0,277,279,3,97,48,0,278,277,1,0,0,0,278,279,1,0,0,0,
        279,282,1,0,0,0,280,282,3,81,40,0,281,268,1,0,0,0,281,272,1,0,0,
        0,281,276,1,0,0,0,281,280,1,0,0,0,282,80,1,0,0,0,283,284,5,48,0,
        0,284,286,7,2,0,0,285,287,7,3,0,0,286,285,1,0,0,0,287,288,1,0,0,
        0,288,286,1,0,0,0,288,289,1,0,0,0,289,82,1,0,0,0,290,294,3,91,45,
        0,291,293,3,71,35,0,292,291,1,0,0,0,293,296,1,0,0,0,294,292,1,0,
        0,0,294,295,1,0,0,0,295,84,1,0,0,0,296,294,1,0,0,0,297,301,5,48,
        0,0,298,300,3,93,46,0,299,298,1,0,0,0,300,303,1,0,0,0,301,299,1,
        0,0,0,301,302,1,0,0,0,302,86,1,0,0,0,303,301,1,0,0,0,304,306,3,89,
        44,0,305,307,3,95,47,0,306,305,1,0,0,0,307,308,1,0,0,0,308,306,1,
        0,0,0,308,309,1,0,0,0,309,88,1,0,0,0,310,311,5,48,0,0,311,312,7,
        4,0,0,312,90,1,0,0,0,313,314,7,5,0,0,314,92,1,0,0,0,315,316,7,6,
        0,0,316,94,1,0,0,0,317,318,7,7,0,0,318,96,1,0,0,0,319,321,3,99,49,
        0,320,322,3,101,50,0,321,320,1,0,0,0,321,322,1,0,0,0,322,335,1,0,
        0,0,323,324,3,99,49,0,324,325,3,103,51,0,325,335,1,0,0,0,326,328,
        3,101,50,0,327,329,3,99,49,0,328,327,1,0,0,0,328,329,1,0,0,0,329,
        335,1,0,0,0,330,332,3,103,51,0,331,333,3,99,49,0,332,331,1,0,0,0,
        332,333,1,0,0,0,333,335,1,0,0,0,334,319,1,0,0,0,334,323,1,0,0,0,
        334,326,1,0,0,0,334,330,1,0,0,0,335,98,1,0,0,0,336,337,7,8,0,0,337,
        100,1,0,0,0,338,339,7,9,0,0,339,102,1,0,0,0,340,341,5,108,0,0,341,
        345,5,108,0,0,342,343,5,76,0,0,343,345,5,76,0,0,344,340,1,0,0,0,
        344,342,1,0,0,0,345,104,1,0,0,0,346,349,3,107,53,0,347,349,3,109,
        54,0,348,346,1,0,0,0,348,347,1,0,0,0,349,106,1,0,0,0,350,352,3,111,
        55,0,351,353,3,113,56,0,352,351,1,0,0,0,352,353,1,0,0,0,353,355,
        1,0,0,0,354,356,3,125,62,0,355,354,1,0,0,0,355,356,1,0,0,0,356,363,
        1,0,0,0,357,358,3,117,58,0,358,360,3,113,56,0,359,361,3,125,62,0,
        360,359,1,0,0,0,360,361,1,0,0,0,361,363,1,0,0,0,362,350,1,0,0,0,
        362,357,1,0,0,0,363,108,1,0,0,0,364,367,3,89,44,0,365,368,3,119,
        59,0,366,368,3,123,61,0,367,365,1,0,0,0,367,366,1,0,0,0,368,369,
        1,0,0,0,369,371,3,121,60,0,370,372,3,125,62,0,371,370,1,0,0,0,371,
        372,1,0,0,0,372,110,1,0,0,0,373,375,3,117,58,0,374,373,1,0,0,0,374,
        375,1,0,0,0,375,376,1,0,0,0,376,377,5,46,0,0,377,382,3,117,58,0,
        378,379,3,117,58,0,379,380,5,46,0,0,380,382,1,0,0,0,381,374,1,0,
        0,0,381,378,1,0,0,0,382,112,1,0,0,0,383,385,7,10,0,0,384,386,3,115,
        57,0,385,384,1,0,0,0,385,386,1,0,0,0,386,387,1,0,0,0,387,388,3,117,
        58,0,388,114,1,0,0,0,389,390,7,11,0,0,390,116,1,0,0,0,391,393,3,
        71,35,0,392,391,1,0,0,0,393,394,1,0,0,0,394,392,1,0,0,0,394,395,
        1,0,0,0,395,118,1,0,0,0,396,398,3,123,61,0,397,396,1,0,0,0,397,398,
        1,0,0,0,398,399,1,0,0,0,399,400,5,46,0,0,400,405,3,123,61,0,401,
        402,3,123,61,0,402,403,5,46,0,0,403,405,1,0,0,0,404,397,1,0,0,0,
        404,401,1,0,0,0,405,120,1,0,0,0,406,408,7,12,0,0,407,409,3,115,57,
        0,408,407,1,0,0,0,408,409,1,0,0,0,409,410,1,0,0,0,410,411,3,117,
        58,0,411,122,1,0,0,0,412,414,3,95,47,0,413,412,1,0,0,0,414,415,1,
        0,0,0,415,413,1,0,0,0,415,416,1,0,0,0,416,124,1,0,0,0,417,418,7,
        13,0,0,418,126,1,0,0,0,419,420,5,39,0,0,420,421,3,129,64,0,421,422,
        5,39,0,0,422,442,1,0,0,0,423,424,5,76,0,0,424,425,5,39,0,0,425,426,
        1,0,0,0,426,427,3,129,64,0,427,428,5,39,0,0,428,442,1,0,0,0,429,
        430,5,117,0,0,430,431,5,39,0,0,431,432,1,0,0,0,432,433,3,129,64,
        0,433,434,5,39,0,0,434,442,1,0,0,0,435,436,5,85,0,0,436,437,5,39,
        0,0,437,438,1,0,0,0,438,439,3,129,64,0,439,440,5,39,0,0,440,442,
        1,0,0,0,441,419,1,0,0,0,441,423,1,0,0,0,441,429,1,0,0,0,441,435,
        1,0,0,0,442,128,1,0,0,0,443,445,3,131,65,0,444,443,1,0,0,0,445,446,
        1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,130,1,0,0,0,448,451,
        8,14,0,0,449,451,3,133,66,0,450,448,1,0,0,0,450,449,1,0,0,0,451,
        132,1,0,0,0,452,457,3,135,67,0,453,457,3,137,68,0,454,457,3,139,
        69,0,455,457,3,73,36,0,456,452,1,0,0,0,456,453,1,0,0,0,456,454,1,
        0,0,0,456,455,1,0,0,0,457,134,1,0,0,0,458,459,5,92,0,0,459,460,7,
        15,0,0,460,136,1,0,0,0,461,462,5,92,0,0,462,464,3,93,46,0,463,465,
        3,93,46,0,464,463,1,0,0,0,464,465,1,0,0,0,465,467,1,0,0,0,466,468,
        3,93,46,0,467,466,1,0,0,0,467,468,1,0,0,0,468,138,1,0,0,0,469,470,
        5,92,0,0,470,471,5,120,0,0,471,473,1,0,0,0,472,474,3,95,47,0,473,
        472,1,0,0,0,474,475,1,0,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,
        140,1,0,0,0,477,479,5,34,0,0,478,480,3,145,72,0,479,478,1,0,0,0,
        479,480,1,0,0,0,480,481,1,0,0,0,481,482,5,34,0,0,482,142,1,0,0,0,
        483,484,5,117,0,0,484,487,5,56,0,0,485,487,7,16,0,0,486,483,1,0,
        0,0,486,485,1,0,0,0,487,144,1,0,0,0,488,490,3,147,73,0,489,488,1,
        0,0,0,490,491,1,0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,146,1,
        0,0,0,493,501,8,17,0,0,494,501,3,133,66,0,495,496,5,92,0,0,496,501,
        5,10,0,0,497,498,5,92,0,0,498,499,5,13,0,0,499,501,5,10,0,0,500,
        493,1,0,0,0,500,494,1,0,0,0,500,495,1,0,0,0,500,497,1,0,0,0,501,
        148,1,0,0,0,502,504,7,18,0,0,503,502,1,0,0,0,504,505,1,0,0,0,505,
        503,1,0,0,0,505,506,1,0,0,0,506,507,1,0,0,0,507,508,6,74,0,0,508,
        150,1,0,0,0,509,511,5,13,0,0,510,512,5,10,0,0,511,510,1,0,0,0,511,
        512,1,0,0,0,512,515,1,0,0,0,513,515,5,10,0,0,514,509,1,0,0,0,514,
        513,1,0,0,0,515,516,1,0,0,0,516,517,6,75,0,0,517,152,1,0,0,0,518,
        519,5,47,0,0,519,520,5,42,0,0,520,524,1,0,0,0,521,523,9,0,0,0,522,
        521,1,0,0,0,523,526,1,0,0,0,524,525,1,0,0,0,524,522,1,0,0,0,525,
        527,1,0,0,0,526,524,1,0,0,0,527,528,5,42,0,0,528,529,5,47,0,0,529,
        530,1,0,0,0,530,531,6,76,0,0,531,154,1,0,0,0,532,533,5,47,0,0,533,
        534,5,47,0,0,534,538,1,0,0,0,535,537,8,19,0,0,536,535,1,0,0,0,537,
        540,1,0,0,0,538,536,1,0,0,0,538,539,1,0,0,0,539,541,1,0,0,0,540,
        538,1,0,0,0,541,542,6,77,0,0,542,156,1,0,0,0,50,0,233,235,240,256,
        266,270,274,278,281,288,294,301,308,321,328,332,334,344,348,352,
        355,360,362,367,371,374,381,385,394,397,404,408,415,441,446,450,
        456,464,467,475,479,486,491,500,505,511,514,524,538,1,6,0,0
    ]

class CexprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LeftParen = 1
    RightParen = 2
    LeftBracket = 3
    RightBracket = 4
    LeftBrace = 5
    RightBrace = 6
    Less = 7
    LessEqual = 8
    Greater = 9
    GreaterEqual = 10
    LeftShift = 11
    RightShift = 12
    Plus = 13
    Minus = 14
    Star = 15
    Div = 16
    Mod = 17
    And = 18
    Or = 19
    AndAnd = 20
    OrOr = 21
    Caret = 22
    Not = 23
    Tilde = 24
    Question = 25
    Colon = 26
    Semi = 27
    Comma = 28
    Equal = 29
    NotEqual = 30
    Arrow = 31
    Dot = 32
    Identifier = 33
    Constant = 34
    DigitSequence = 35
    StringLiteral = 36
    Whitespace = 37
    Newline = 38
    BlockComment = 39
    LineComment = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'{'", "'}'", "'<'", "'<='", "'>'", 
            "'>='", "'<<'", "'>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'&'", 
            "'|'", "'&&'", "'||'", "'^'", "'!'", "'~'", "'?'", "':'", "';'", 
            "','", "'=='", "'!='", "'->'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", 
            "RightBrace", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "LeftShift", "RightShift", "Plus", "Minus", "Star", "Div", "Mod", 
            "And", "Or", "AndAnd", "OrOr", "Caret", "Not", "Tilde", "Question", 
            "Colon", "Semi", "Comma", "Equal", "NotEqual", "Arrow", "Dot", 
            "Identifier", "Constant", "DigitSequence", "StringLiteral", 
            "Whitespace", "Newline", "BlockComment", "LineComment" ]

    ruleNames = [ "LeftParen", "RightParen", "LeftBracket", "RightBracket", 
                  "LeftBrace", "RightBrace", "Less", "LessEqual", "Greater", 
                  "GreaterEqual", "LeftShift", "RightShift", "Plus", "Minus", 
                  "Star", "Div", "Mod", "And", "Or", "AndAnd", "OrOr", "Caret", 
                  "Not", "Tilde", "Question", "Colon", "Semi", "Comma", 
                  "Equal", "NotEqual", "Arrow", "Dot", "Identifier", "IdentifierNondigit", 
                  "Nondigit", "Digit", "UniversalCharacterName", "HexQuad", 
                  "Constant", "IntegerConstant", "BinaryConstant", "DecimalConstant", 
                  "OctalConstant", "HexadecimalConstant", "HexadecimalPrefix", 
                  "NonzeroDigit", "OctalDigit", "HexadecimalDigit", "IntegerSuffix", 
                  "UnsignedSuffix", "LongSuffix", "LongLongSuffix", "FloatingConstant", 
                  "DecimalFloatingConstant", "HexadecimalFloatingConstant", 
                  "FractionalConstant", "ExponentPart", "Sign", "DigitSequence", 
                  "HexadecimalFractionalConstant", "BinaryExponentPart", 
                  "HexadecimalDigitSequence", "FloatingSuffix", "CharacterConstant", 
                  "CCharSequence", "CChar", "EscapeSequence", "SimpleEscapeSequence", 
                  "OctalEscapeSequence", "HexadecimalEscapeSequence", "StringLiteral", 
                  "EncodingPrefix", "SCharSequence", "SChar", "Whitespace", 
                  "Newline", "BlockComment", "LineComment" ]

    grammarFileName = "Cexpr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


