# pylint: skip-file
# Generated from Cexpr.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,536,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,
        1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,
        14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,
        20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,
        26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,
        31,1,31,1,32,1,32,1,32,5,32,232,8,32,10,32,12,32,235,9,32,1,33,1,
        33,3,33,239,8,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,36,3,36,255,8,36,1,37,1,37,1,37,1,37,1,37,1,
        38,1,38,1,38,3,38,265,8,38,1,39,1,39,3,39,269,8,39,1,39,1,39,3,39,
        273,8,39,1,39,1,39,3,39,277,8,39,1,39,3,39,280,8,39,1,40,1,40,1,
        40,4,40,285,8,40,11,40,12,40,286,1,41,1,41,5,41,291,8,41,10,41,12,
        41,294,9,41,1,42,1,42,5,42,298,8,42,10,42,12,42,301,9,42,1,43,1,
        43,4,43,305,8,43,11,43,12,43,306,1,44,1,44,1,44,1,45,1,45,1,46,1,
        46,1,47,1,47,1,48,1,48,3,48,320,8,48,1,48,1,48,1,48,1,48,1,48,3,
        48,327,8,48,1,48,1,48,3,48,331,8,48,3,48,333,8,48,1,49,1,49,1,50,
        1,50,1,51,1,51,1,51,1,51,3,51,343,8,51,1,52,1,52,3,52,347,8,52,1,
        53,1,53,3,53,351,8,53,1,53,3,53,354,8,53,1,53,1,53,1,53,3,53,359,
        8,53,3,53,361,8,53,1,54,1,54,1,54,3,54,366,8,54,1,54,1,54,3,54,370,
        8,54,1,55,3,55,373,8,55,1,55,1,55,1,55,1,55,1,55,3,55,380,8,55,1,
        56,1,56,3,56,384,8,56,1,56,1,56,1,57,1,57,1,58,4,58,391,8,58,11,
        58,12,58,392,1,59,3,59,396,8,59,1,59,1,59,1,59,1,59,1,59,3,59,403,
        8,59,1,60,1,60,3,60,407,8,60,1,60,1,60,1,61,4,61,412,8,61,11,61,
        12,61,413,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        3,63,440,8,63,1,64,4,64,443,8,64,11,64,12,64,444,1,65,1,65,3,65,
        449,8,65,1,66,1,66,1,66,1,66,3,66,455,8,66,1,67,1,67,1,67,1,68,1,
        68,1,68,3,68,463,8,68,1,68,3,68,466,8,68,1,69,1,69,1,69,1,69,4,69,
        472,8,69,11,69,12,69,473,1,70,1,70,3,70,478,8,70,1,70,1,70,1,71,
        4,71,483,8,71,11,71,12,71,484,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
        3,72,494,8,72,1,73,4,73,497,8,73,11,73,12,73,498,1,73,1,73,1,74,
        1,74,3,74,505,8,74,1,74,3,74,508,8,74,1,74,1,74,1,75,1,75,1,75,1,
        75,5,75,516,8,75,10,75,12,75,519,9,75,1,75,1,75,1,75,1,75,1,75,1,
        76,1,76,1,76,1,76,5,76,530,8,76,10,76,12,76,533,9,76,1,76,1,76,1,
        517,0,77,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        0,69,0,71,0,73,0,75,0,77,34,79,0,81,0,83,0,85,0,87,0,89,0,91,0,93,
        0,95,0,97,0,99,0,101,0,103,0,105,0,107,0,109,0,111,0,113,0,115,0,
        117,35,119,0,121,0,123,0,125,0,127,0,129,0,131,0,133,0,135,0,137,
        0,139,0,141,36,143,0,145,0,147,37,149,38,151,39,153,40,1,0,19,3,
        0,65,90,95,95,97,122,1,0,48,57,2,0,66,66,98,98,1,0,48,49,2,0,88,
        88,120,120,1,0,49,57,1,0,48,55,3,0,48,57,65,70,97,102,2,0,85,85,
        117,117,2,0,76,76,108,108,2,0,69,69,101,101,2,0,43,43,45,45,2,0,
        80,80,112,112,4,0,70,70,76,76,102,102,108,108,4,0,10,10,13,13,39,
        39,92,92,10,0,34,34,39,39,63,63,92,92,97,98,102,102,110,110,114,
        114,116,116,118,118,4,0,10,10,13,13,34,34,92,92,2,0,9,9,32,32,2,
        0,10,10,13,13,557,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,77,1,0,0,
        0,0,117,1,0,0,0,0,141,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
        1,0,0,0,0,153,1,0,0,0,1,155,1,0,0,0,3,157,1,0,0,0,5,159,1,0,0,0,
        7,161,1,0,0,0,9,163,1,0,0,0,11,165,1,0,0,0,13,167,1,0,0,0,15,169,
        1,0,0,0,17,172,1,0,0,0,19,174,1,0,0,0,21,177,1,0,0,0,23,180,1,0,
        0,0,25,183,1,0,0,0,27,185,1,0,0,0,29,187,1,0,0,0,31,189,1,0,0,0,
        33,191,1,0,0,0,35,193,1,0,0,0,37,195,1,0,0,0,39,197,1,0,0,0,41,200,
        1,0,0,0,43,203,1,0,0,0,45,205,1,0,0,0,47,207,1,0,0,0,49,209,1,0,
        0,0,51,211,1,0,0,0,53,213,1,0,0,0,55,215,1,0,0,0,57,217,1,0,0,0,
        59,220,1,0,0,0,61,223,1,0,0,0,63,226,1,0,0,0,65,228,1,0,0,0,67,238,
        1,0,0,0,69,240,1,0,0,0,71,242,1,0,0,0,73,254,1,0,0,0,75,256,1,0,
        0,0,77,264,1,0,0,0,79,279,1,0,0,0,81,281,1,0,0,0,83,288,1,0,0,0,
        85,295,1,0,0,0,87,302,1,0,0,0,89,308,1,0,0,0,91,311,1,0,0,0,93,313,
        1,0,0,0,95,315,1,0,0,0,97,332,1,0,0,0,99,334,1,0,0,0,101,336,1,0,
        0,0,103,342,1,0,0,0,105,346,1,0,0,0,107,360,1,0,0,0,109,362,1,0,
        0,0,111,379,1,0,0,0,113,381,1,0,0,0,115,387,1,0,0,0,117,390,1,0,
        0,0,119,402,1,0,0,0,121,404,1,0,0,0,123,411,1,0,0,0,125,415,1,0,
        0,0,127,439,1,0,0,0,129,442,1,0,0,0,131,448,1,0,0,0,133,454,1,0,
        0,0,135,456,1,0,0,0,137,459,1,0,0,0,139,467,1,0,0,0,141,475,1,0,
        0,0,143,482,1,0,0,0,145,493,1,0,0,0,147,496,1,0,0,0,149,507,1,0,
        0,0,151,511,1,0,0,0,153,525,1,0,0,0,155,156,5,40,0,0,156,2,1,0,0,
        0,157,158,5,41,0,0,158,4,1,0,0,0,159,160,5,91,0,0,160,6,1,0,0,0,
        161,162,5,93,0,0,162,8,1,0,0,0,163,164,5,123,0,0,164,10,1,0,0,0,
        165,166,5,125,0,0,166,12,1,0,0,0,167,168,5,60,0,0,168,14,1,0,0,0,
        169,170,5,60,0,0,170,171,5,61,0,0,171,16,1,0,0,0,172,173,5,62,0,
        0,173,18,1,0,0,0,174,175,5,62,0,0,175,176,5,61,0,0,176,20,1,0,0,
        0,177,178,5,60,0,0,178,179,5,60,0,0,179,22,1,0,0,0,180,181,5,62,
        0,0,181,182,5,62,0,0,182,24,1,0,0,0,183,184,5,43,0,0,184,26,1,0,
        0,0,185,186,5,45,0,0,186,28,1,0,0,0,187,188,5,42,0,0,188,30,1,0,
        0,0,189,190,5,47,0,0,190,32,1,0,0,0,191,192,5,37,0,0,192,34,1,0,
        0,0,193,194,5,38,0,0,194,36,1,0,0,0,195,196,5,124,0,0,196,38,1,0,
        0,0,197,198,5,38,0,0,198,199,5,38,0,0,199,40,1,0,0,0,200,201,5,124,
        0,0,201,202,5,124,0,0,202,42,1,0,0,0,203,204,5,94,0,0,204,44,1,0,
        0,0,205,206,5,33,0,0,206,46,1,0,0,0,207,208,5,126,0,0,208,48,1,0,
        0,0,209,210,5,63,0,0,210,50,1,0,0,0,211,212,5,58,0,0,212,52,1,0,
        0,0,213,214,5,59,0,0,214,54,1,0,0,0,215,216,5,44,0,0,216,56,1,0,
        0,0,217,218,5,61,0,0,218,219,5,61,0,0,219,58,1,0,0,0,220,221,5,33,
        0,0,221,222,5,61,0,0,222,60,1,0,0,0,223,224,5,45,0,0,224,225,5,62,
        0,0,225,62,1,0,0,0,226,227,5,46,0,0,227,64,1,0,0,0,228,233,3,67,
        33,0,229,232,3,67,33,0,230,232,3,71,35,0,231,229,1,0,0,0,231,230,
        1,0,0,0,232,235,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,66,1,
        0,0,0,235,233,1,0,0,0,236,239,3,69,34,0,237,239,3,73,36,0,238,236,
        1,0,0,0,238,237,1,0,0,0,239,68,1,0,0,0,240,241,7,0,0,0,241,70,1,
        0,0,0,242,243,7,1,0,0,243,72,1,0,0,0,244,245,5,92,0,0,245,246,5,
        117,0,0,246,247,1,0,0,0,247,255,3,75,37,0,248,249,5,92,0,0,249,250,
        5,85,0,0,250,251,1,0,0,0,251,252,3,75,37,0,252,253,3,75,37,0,253,
        255,1,0,0,0,254,244,1,0,0,0,254,248,1,0,0,0,255,74,1,0,0,0,256,257,
        3,95,47,0,257,258,3,95,47,0,258,259,3,95,47,0,259,260,3,95,47,0,
        260,76,1,0,0,0,261,265,3,79,39,0,262,265,3,105,52,0,263,265,3,127,
        63,0,264,261,1,0,0,0,264,262,1,0,0,0,264,263,1,0,0,0,265,78,1,0,
        0,0,266,268,3,83,41,0,267,269,3,97,48,0,268,267,1,0,0,0,268,269,
        1,0,0,0,269,280,1,0,0,0,270,272,3,85,42,0,271,273,3,97,48,0,272,
        271,1,0,0,0,272,273,1,0,0,0,273,280,1,0,0,0,274,276,3,87,43,0,275,
        277,3,97,48,0,276,275,1,0,0,0,276,277,1,0,0,0,277,280,1,0,0,0,278,
        280,3,81,40,0,279,266,1,0,0,0,279,270,1,0,0,0,279,274,1,0,0,0,279,
        278,1,0,0,0,280,80,1,0,0,0,281,282,5,48,0,0,282,284,7,2,0,0,283,
        285,7,3,0,0,284,283,1,0,0,0,285,286,1,0,0,0,286,284,1,0,0,0,286,
        287,1,0,0,0,287,82,1,0,0,0,288,292,3,91,45,0,289,291,3,71,35,0,290,
        289,1,0,0,0,291,294,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,
        84,1,0,0,0,294,292,1,0,0,0,295,299,5,48,0,0,296,298,3,93,46,0,297,
        296,1,0,0,0,298,301,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,
        86,1,0,0,0,301,299,1,0,0,0,302,304,3,89,44,0,303,305,3,95,47,0,304,
        303,1,0,0,0,305,306,1,0,0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,
        88,1,0,0,0,308,309,5,48,0,0,309,310,7,4,0,0,310,90,1,0,0,0,311,312,
        7,5,0,0,312,92,1,0,0,0,313,314,7,6,0,0,314,94,1,0,0,0,315,316,7,
        7,0,0,316,96,1,0,0,0,317,319,3,99,49,0,318,320,3,101,50,0,319,318,
        1,0,0,0,319,320,1,0,0,0,320,333,1,0,0,0,321,322,3,99,49,0,322,323,
        3,103,51,0,323,333,1,0,0,0,324,326,3,101,50,0,325,327,3,99,49,0,
        326,325,1,0,0,0,326,327,1,0,0,0,327,333,1,0,0,0,328,330,3,103,51,
        0,329,331,3,99,49,0,330,329,1,0,0,0,330,331,1,0,0,0,331,333,1,0,
        0,0,332,317,1,0,0,0,332,321,1,0,0,0,332,324,1,0,0,0,332,328,1,0,
        0,0,333,98,1,0,0,0,334,335,7,8,0,0,335,100,1,0,0,0,336,337,7,9,0,
        0,337,102,1,0,0,0,338,339,5,108,0,0,339,343,5,108,0,0,340,341,5,
        76,0,0,341,343,5,76,0,0,342,338,1,0,0,0,342,340,1,0,0,0,343,104,
        1,0,0,0,344,347,3,107,53,0,345,347,3,109,54,0,346,344,1,0,0,0,346,
        345,1,0,0,0,347,106,1,0,0,0,348,350,3,111,55,0,349,351,3,113,56,
        0,350,349,1,0,0,0,350,351,1,0,0,0,351,353,1,0,0,0,352,354,3,125,
        62,0,353,352,1,0,0,0,353,354,1,0,0,0,354,361,1,0,0,0,355,356,3,117,
        58,0,356,358,3,113,56,0,357,359,3,125,62,0,358,357,1,0,0,0,358,359,
        1,0,0,0,359,361,1,0,0,0,360,348,1,0,0,0,360,355,1,0,0,0,361,108,
        1,0,0,0,362,365,3,89,44,0,363,366,3,119,59,0,364,366,3,123,61,0,
        365,363,1,0,0,0,365,364,1,0,0,0,366,367,1,0,0,0,367,369,3,121,60,
        0,368,370,3,125,62,0,369,368,1,0,0,0,369,370,1,0,0,0,370,110,1,0,
        0,0,371,373,3,117,58,0,372,371,1,0,0,0,372,373,1,0,0,0,373,374,1,
        0,0,0,374,375,5,46,0,0,375,380,3,117,58,0,376,377,3,117,58,0,377,
        378,5,46,0,0,378,380,1,0,0,0,379,372,1,0,0,0,379,376,1,0,0,0,380,
        112,1,0,0,0,381,383,7,10,0,0,382,384,3,115,57,0,383,382,1,0,0,0,
        383,384,1,0,0,0,384,385,1,0,0,0,385,386,3,117,58,0,386,114,1,0,0,
        0,387,388,7,11,0,0,388,116,1,0,0,0,389,391,3,71,35,0,390,389,1,0,
        0,0,391,392,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,118,1,0,
        0,0,394,396,3,123,61,0,395,394,1,0,0,0,395,396,1,0,0,0,396,397,1,
        0,0,0,397,398,5,46,0,0,398,403,3,123,61,0,399,400,3,123,61,0,400,
        401,5,46,0,0,401,403,1,0,0,0,402,395,1,0,0,0,402,399,1,0,0,0,403,
        120,1,0,0,0,404,406,7,12,0,0,405,407,3,115,57,0,406,405,1,0,0,0,
        406,407,1,0,0,0,407,408,1,0,0,0,408,409,3,117,58,0,409,122,1,0,0,
        0,410,412,3,95,47,0,411,410,1,0,0,0,412,413,1,0,0,0,413,411,1,0,
        0,0,413,414,1,0,0,0,414,124,1,0,0,0,415,416,7,13,0,0,416,126,1,0,
        0,0,417,418,5,39,0,0,418,419,3,129,64,0,419,420,5,39,0,0,420,440,
        1,0,0,0,421,422,5,76,0,0,422,423,5,39,0,0,423,424,1,0,0,0,424,425,
        3,129,64,0,425,426,5,39,0,0,426,440,1,0,0,0,427,428,5,117,0,0,428,
        429,5,39,0,0,429,430,1,0,0,0,430,431,3,129,64,0,431,432,5,39,0,0,
        432,440,1,0,0,0,433,434,5,85,0,0,434,435,5,39,0,0,435,436,1,0,0,
        0,436,437,3,129,64,0,437,438,5,39,0,0,438,440,1,0,0,0,439,417,1,
        0,0,0,439,421,1,0,0,0,439,427,1,0,0,0,439,433,1,0,0,0,440,128,1,
        0,0,0,441,443,3,131,65,0,442,441,1,0,0,0,443,444,1,0,0,0,444,442,
        1,0,0,0,444,445,1,0,0,0,445,130,1,0,0,0,446,449,8,14,0,0,447,449,
        3,133,66,0,448,446,1,0,0,0,448,447,1,0,0,0,449,132,1,0,0,0,450,455,
        3,135,67,0,451,455,3,137,68,0,452,455,3,139,69,0,453,455,3,73,36,
        0,454,450,1,0,0,0,454,451,1,0,0,0,454,452,1,0,0,0,454,453,1,0,0,
        0,455,134,1,0,0,0,456,457,5,92,0,0,457,458,7,15,0,0,458,136,1,0,
        0,0,459,460,5,92,0,0,460,462,3,93,46,0,461,463,3,93,46,0,462,461,
        1,0,0,0,462,463,1,0,0,0,463,465,1,0,0,0,464,466,3,93,46,0,465,464,
        1,0,0,0,465,466,1,0,0,0,466,138,1,0,0,0,467,468,5,92,0,0,468,469,
        5,120,0,0,469,471,1,0,0,0,470,472,3,95,47,0,471,470,1,0,0,0,472,
        473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,140,1,0,0,0,475,
        477,5,34,0,0,476,478,3,143,71,0,477,476,1,0,0,0,477,478,1,0,0,0,
        478,479,1,0,0,0,479,480,5,34,0,0,480,142,1,0,0,0,481,483,3,145,72,
        0,482,481,1,0,0,0,483,484,1,0,0,0,484,482,1,0,0,0,484,485,1,0,0,
        0,485,144,1,0,0,0,486,494,8,16,0,0,487,494,3,133,66,0,488,489,5,
        92,0,0,489,494,5,10,0,0,490,491,5,92,0,0,491,492,5,13,0,0,492,494,
        5,10,0,0,493,486,1,0,0,0,493,487,1,0,0,0,493,488,1,0,0,0,493,490,
        1,0,0,0,494,146,1,0,0,0,495,497,7,17,0,0,496,495,1,0,0,0,497,498,
        1,0,0,0,498,496,1,0,0,0,498,499,1,0,0,0,499,500,1,0,0,0,500,501,
        6,73,0,0,501,148,1,0,0,0,502,504,5,13,0,0,503,505,5,10,0,0,504,503,
        1,0,0,0,504,505,1,0,0,0,505,508,1,0,0,0,506,508,5,10,0,0,507,502,
        1,0,0,0,507,506,1,0,0,0,508,509,1,0,0,0,509,510,6,74,0,0,510,150,
        1,0,0,0,511,512,5,47,0,0,512,513,5,42,0,0,513,517,1,0,0,0,514,516,
        9,0,0,0,515,514,1,0,0,0,516,519,1,0,0,0,517,518,1,0,0,0,517,515,
        1,0,0,0,518,520,1,0,0,0,519,517,1,0,0,0,520,521,5,42,0,0,521,522,
        5,47,0,0,522,523,1,0,0,0,523,524,6,75,0,0,524,152,1,0,0,0,525,526,
        5,47,0,0,526,527,5,47,0,0,527,531,1,0,0,0,528,530,8,18,0,0,529,528,
        1,0,0,0,530,533,1,0,0,0,531,529,1,0,0,0,531,532,1,0,0,0,532,534,
        1,0,0,0,533,531,1,0,0,0,534,535,6,76,0,0,535,154,1,0,0,0,49,0,231,
        233,238,254,264,268,272,276,279,286,292,299,306,319,326,330,332,
        342,346,350,353,358,360,365,369,372,379,383,392,395,402,406,413,
        439,444,448,454,462,465,473,477,484,493,498,504,507,517,531,1,6,
        0,0
    ]

class CexprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LeftParen = 1
    RightParen = 2
    LeftBracket = 3
    RightBracket = 4
    LeftBrace = 5
    RightBrace = 6
    Less = 7
    LessEqual = 8
    Greater = 9
    GreaterEqual = 10
    LeftShift = 11
    RightShift = 12
    Plus = 13
    Minus = 14
    Star = 15
    Div = 16
    Mod = 17
    And = 18
    Or = 19
    AndAnd = 20
    OrOr = 21
    Caret = 22
    Not = 23
    Tilde = 24
    Question = 25
    Colon = 26
    Semi = 27
    Comma = 28
    Equal = 29
    NotEqual = 30
    Arrow = 31
    Dot = 32
    Identifier = 33
    Constant = 34
    DigitSequence = 35
    StringLiteral = 36
    Whitespace = 37
    Newline = 38
    BlockComment = 39
    LineComment = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'{'", "'}'", "'<'", "'<='", "'>'", 
            "'>='", "'<<'", "'>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'&'", 
            "'|'", "'&&'", "'||'", "'^'", "'!'", "'~'", "'?'", "':'", "';'", 
            "','", "'=='", "'!='", "'->'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "LeftParen", "RightParen", "LeftBracket", "RightBracket", "LeftBrace", 
            "RightBrace", "Less", "LessEqual", "Greater", "GreaterEqual", 
            "LeftShift", "RightShift", "Plus", "Minus", "Star", "Div", "Mod", 
            "And", "Or", "AndAnd", "OrOr", "Caret", "Not", "Tilde", "Question", 
            "Colon", "Semi", "Comma", "Equal", "NotEqual", "Arrow", "Dot", 
            "Identifier", "Constant", "DigitSequence", "StringLiteral", 
            "Whitespace", "Newline", "BlockComment", "LineComment" ]

    ruleNames = [ "LeftParen", "RightParen", "LeftBracket", "RightBracket", 
                  "LeftBrace", "RightBrace", "Less", "LessEqual", "Greater", 
                  "GreaterEqual", "LeftShift", "RightShift", "Plus", "Minus", 
                  "Star", "Div", "Mod", "And", "Or", "AndAnd", "OrOr", "Caret", 
                  "Not", "Tilde", "Question", "Colon", "Semi", "Comma", 
                  "Equal", "NotEqual", "Arrow", "Dot", "Identifier", "IdentifierNondigit", 
                  "Nondigit", "Digit", "UniversalCharacterName", "HexQuad", 
                  "Constant", "IntegerConstant", "BinaryConstant", "DecimalConstant", 
                  "OctalConstant", "HexadecimalConstant", "HexadecimalPrefix", 
                  "NonzeroDigit", "OctalDigit", "HexadecimalDigit", "IntegerSuffix", 
                  "UnsignedSuffix", "LongSuffix", "LongLongSuffix", "FloatingConstant", 
                  "DecimalFloatingConstant", "HexadecimalFloatingConstant", 
                  "FractionalConstant", "ExponentPart", "Sign", "DigitSequence", 
                  "HexadecimalFractionalConstant", "BinaryExponentPart", 
                  "HexadecimalDigitSequence", "FloatingSuffix", "CharacterConstant", 
                  "CCharSequence", "CChar", "EscapeSequence", "SimpleEscapeSequence", 
                  "OctalEscapeSequence", "HexadecimalEscapeSequence", "StringLiteral", 
                  "SCharSequence", "SChar", "Whitespace", "Newline", "BlockComment", 
                  "LineComment" ]

    grammarFileName = "Cexpr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


