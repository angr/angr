
# Test cases for jump table resolver

import os
import logging

import nose.tools

import angr


test_location = str(os.path.join(os.path.dirname(os.path.realpath(__file__)), '..', '..', 'binaries', 'tests'))
l = logging.getLogger("angr.tests.test_jumptables")


class J:
    def __init__(self, baddr, taddr, ents):
        self.block_addr = baddr
        self.table_addr = taddr
        self.entries = ents

    def __hash__(self):
        return hash((self.block_addr, self.table_addr, len(self.entries)))


def compare(jump_tables, groundtruth):
    for j in groundtruth:
        nose.tools.assert_in(j.block_addr, jump_tables, "Jump table @ block %#x is not found in CFG." % j.block_addr)
        jumptable_addr = jump_tables[j.block_addr].jumptable_addr
        nose.tools.assert_equal(j.table_addr, jumptable_addr,
                                "Mismatch jump table addresses (expecting %#x, got %#x)." % (
                                    j.table_addr,
                                    jumptable_addr
                                ))
        nose.tools.assert_equal(j.entries, jump_tables[j.block_addr].jumptable_entries)


def test_amd64_dir_gcc_O0():
    p = angr.Project(os.path.join(test_location, "x86_64", "dir_gcc_-O0"), auto_load_libs=False)
    cfg = p.analyses.CFGFast()

    all_jumptables = {
        J(0x40404c, 0x41b0a0, [0x404741, 0x404737, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4043ef, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x404280, 0x40429d, 0x4042b6, 0x4042c5, 0x4047ad, 0x4042d1, 0x4042e0, 0x4042ec, 0x40430a, 0x4047ad, 0x4047ad, 0x40431e, 0x4047ad, 0x40432d, 0x4047ad, 0x4047ad, 0x404341, 0x404355, 0x404361, 0x404377, 0x4043c3, 0x4047ad, 0x4047ad, 0x4043d9, 0x4047ad, 0x40472b, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x404058, 0x404067, 0x40407b, 0x40408a, 0x4047ad, 0x404096, 0x4040fd, 0x404113, 0x404147, 0x4047ad, 0x404153, 0x40415f, 0x40416e, 0x40417d, 0x404193, 0x4041a9, 0x4041b8, 0x4041c4, 0x4041d0, 0x4041dc, 0x4041f2, 0x404201, 0x404217, 0x404271, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x4047ad, 0x40440c, 0x40468c, 0x404543, 0x4042fb, 0x4040ee, 0x4044e6, 0x404526, 0x40449a, 0x404418, 0x4045ea, 0x40462a, 0x404680, 0x4046f7, 0x404453, 0x4044a6, 0x404670]),
        J(0x404d53, 0x41b938, [0x404d60, 0x404de7, 0x404ea3, 0x404f00, 0x404fa5]),
        J(0x404df6, 0x41b960, [0x404e61, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e02, 0x404e02, 0x404e02, 0x404e02, 0x404e02, 0x404e02, 0x404e02, 0x404e02, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e55, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e18, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e5b, 0x404e6a, 0x404e25, 0x404e2b, 0x404e6a, 0x404e6a, 0x404e31, 0x404e37, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e3d, 0x404e6a, 0x404e6a, 0x404e6a, 0x404e43, 0x404e6a, 0x404e49, 0x404e6a, 0x404e4f, 0x404e6a, 0x404e18]),
        J(0x404f12, 0x41bd28, [0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f1e, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f62, 0x404f62, 0x404f62, 0x404f62, 0x404f62, 0x404f62, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f84, 0x404f40, 0x404f40, 0x404f40, 0x404f40, 0x404f40, 0x404f40]),
        J(0x4051b0, 0x41bf58, [0x405412, 0x4051bd, 0x40528b, 0x4052c0, 0x4053b5, 0x405412, 0x40541d]),
        J(0x405b34, 0x41c088, [0x405b9f, 0x405b64, 0x405b4c, 0x405b9f, 0x405b58, 0x405b9f, 0x405b40, 0x405b9f, 0x405b7c, 0x405b9f, 0x405b70, 0x405b9f, 0x405b88, 0x405b9f, 0x405b94]),
        J(0x408899, 0x41c380, [0x408942, 0x4088a5, 0x4088f2, 0x408917, 0x408936]),
        J(0x410b5b, 0x41e410, [0x410cc9, 0x410c72, 0x410c85, 0x410c6e, 0x410c76, 0x410b79, 0x410b6b, 0x410bba, 0x410bc7, 0x410bc7, 0x410bc7]),
        J(0x410da4, 0x41e468, [0x410db0, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x41103c, 0x411042, 0x41105a, 0x41104e, 0x411060, 0x411048, 0x411054, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411195, 0x411102, 0x411102, 0x411102, 0x4110f7, 0x411102, 0x41155c, 0x411102, 0x41111e, 0x411102, 0x411102, 0x411102, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x411102, 0x411102, 0x411102, 0x411102, 0x410ef9, 0x411195, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x411102, 0x411066, 0x41155c, 0x411102, 0x41155c, 0x411102, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x41155c, 0x4110c5, 0x411102, 0x4110c5, 0x4110f7]),
        J(0x410f84, 0x41e860, [0x410f90, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x410f90, 0x410f90, 0x410f90, 0x41102d, 0x41102d, 0x41102d, 0x410f90, 0x41102d, 0x410f90, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x41102d, 0x410f90, 0x410f90, 0x410f90]),
        J(0x411300, 0x41e950, [0x4117b2, 0x4117b2, 0x41130c, 0x4117b2, 0x41130c, 0x4117b2, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x41130c, 0x4117b2]),
        J(0x412aae, 0x41ea88, [0x414b93, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x412abe, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414905, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x412c2f, 0x412c85, 0x413105, 0x4131d1, 0x414be3, 0x413bb4, 0x414295, 0x413bd1, 0x413bfd, 0x414be3, 0x414be3, 0x414be3, 0x413cbe, 0x413d2f, 0x414be3, 0x413ed8, 0x414be3, 0x413f09, 0x413f19, 0x4140b6, 0x41423e, 0x414295, 0x4145b5, 0x4140a4, 0x414660, 0x414749, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x414be3, 0x412c02, 0x412c5c, 0x412cb2, 0x4131ee, 0x413217, 0x414be3, 0x414295, 0x412c5c, 0x414be3, 0x413c79, 0x413c25, 0x413c51, 0x413cea, 0x413daa, 0x414be3, 0x413ee9, 0x414be3, 0x412e7d, 0x413f44, 0x4140c6, 0x4141f4, 0x414be3, 0x414634, 0x4131bf, 0x4146b6, 0x41495e]),
        J(0x415060, 0x41f0d8, [0x415073, 0x415078, 0x4150a8, 0x4150e3, 0x41512c, 0x415183, 0x4151ef, 0x415269, 0x4152f9, 0x415397]),
        J(0x415faa, 0x41f268, [0x415fcf, 0x4160ee, 0x4160ee, 0x415ff4, 0x4160ee, 0x416012, 0x4160ee, 0x4160ee, 0x4160ee, 0x416030, 0x4160ee, 0x41604e, 0x4160ee, 0x4160ee, 0x41606c, 0x4160ee, 0x4160ee, 0x4160ee, 0x416087, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160b8, 0x4160d3, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x415fb6, 0x415fe8, 0x4160ee, 0x4160ee, 0x4160ee, 0x416012, 0x4160ee, 0x4160ee, 0x4160ee, 0x416030, 0x4160ee, 0x41604e, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x4160ee, 0x416087, 0x4160ee, 0x4160ee, 0x4160a2]),
        J(0x416586, 0x41f4c8, [0x4165ab, 0x4166ca, 0x4166ca, 0x4165d0, 0x4166ca, 0x4165ee, 0x4166ca, 0x4166ca, 0x4166ca, 0x41660c, 0x4166ca, 0x41662a, 0x4166ca, 0x4166ca, 0x416648, 0x4166ca, 0x4166ca, 0x4166ca, 0x416663, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x416694, 0x4166af, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x416592, 0x4165c4, 0x4166ca, 0x4166ca, 0x4166ca, 0x4165ee, 0x4166ca, 0x4166ca, 0x4166ca, 0x41660c, 0x4166ca, 0x41662a, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x4166ca, 0x416663, 0x4166ca, 0x4166ca, 0x41667e]),
        J(0x4177ec, 0x41f6b0, [0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177ff, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8, 0x4177f8]),
    }

    compare(cfg.jump_tables, all_jumptables)


def test_amd64_cfgswitches_gcc():
    p = angr.Project(os.path.join(test_location, "x86_64", "cfg_switches"), auto_load_libs=False)
    cfg = p.analyses.CFGFast()

    all_jumptables = {
        J(0x4006e1, 0x400a40, [0x40075b, 0x4006EE, 0x4006FA, 0x4006EE, 0x40070B, 0x4006EE, 0x40071C, 0x4006EE, 0x40072D, 0x4006EE, 0x40073E, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40075b, 0x40074F]),
        J(0x4005bc, 0x4008c0, [0x4006b0, 0x4006b0, 0x4005C9, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4005D8, 0x4006b0, 0x4005E7, 0x4006b0, 0x4005F6, 0x400605, 0x400614, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x400623, 0x4006b0, 0x400632, 0x4006b0, 0x4006b0, 0x4006b0, 0x40063E, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x4006b0, 0x40064A]),
        J(0x40053a, 0x4007f8, [0x40058d, 0x400547, 0x40058d, 0x400552, 0x40058d, 0x40055D, 0x40058d, 0x400568, 0x40058d, 0x400573, 0x40058d, 0x40058d, 0x400580]),
        J(0x40065a, 0x4009f8, [0x4006a3, 0x400667, 0x400673, 0x40067f, 0x40068b, 0x400697]),
    }

    compare(cfg.jump_tables, all_jumptables)


def test_armel_cfgswitches_gcc():
    p = angr.Project(os.path.join(test_location, "armel", "cfg_switches"), auto_load_libs=False)
    cfg = p.analyses.CFGFast()

    all_jumptables = {
        J(0x10734, 0x10748, [0x107FC, 0x10808, 0x107FC, 0x10818, 0x107FC, 0x10828, 0x107FC, 0x10838, 0x107FC, 0x10848, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10864, 0x10858]),
        J(0x10434, 0x10458, [0x10488, 0x104e8, 0x10498, 0x104e8, 0x104A8, 0x104e8, 0x104B8, 0x104e8, 0x104C8, 0x104e8, 0x104e8, 0x104D8]),
        J(0x10524, 0x10538, [0x105CC, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x105D8, 0x106b4, 0x105E4, 0x106b4, 0x105F0, 0x105FC, 0x10608, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x10614, 0x106b4, 0x10620, 0x106b4, 0x106b4, 0x106b4, 0x1062C, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x106b4, 0x10638]),
        J(0x10640, 0x10654, [0x10668, 0x10674, 0x10680, 0x1068c, 0x10698]),
    }

    compare(cfg.jump_tables, all_jumptables)


def test_s390x_cfgswitches():
    p = angr.Project(os.path.join(test_location, "s390x", "cfg_switches"), auto_load_libs=False)
    cfg = p.analyses.CFGFast()

    all_jumptables = {
        J(0x400638, 0x400c00, [0x40064e, 0x40065c, 0x400692, 0x40065c, 0x4006a4, 0x40065c, 0x40066e, 0x40065c, 0x400680]),
        J(0x4007d4, 0x400a50, [0x4007ea, 0x4007ca, 0x4007f4, 0x4007ca, 0x4007fe, 0x4007ca, 0x400808, 0x4007ca, 0x400812, 0x4007ca, 0x4007ca, 0x40081c]),
        J(0x400872, 0x400ab0, [0x4008ae, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x4008be, 0x400854, 0x4008ce, 0x400854, 0x4008de, 0x4008ee, 0x4008fe, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x40090e, 0x400854, 0x40091e, 0x400854, 0x400854, 0x400854, 0x40092e, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400854, 0x400888]),
        J(0x40093e, 0x400bd8, [0x400984, 0x400974, 0x400964, 0x400954, 0x400994]),
    }

    compare(cfg.jump_tables, all_jumptables)


if __name__ == "__main__":
    test_amd64_dir_gcc_O0()
    test_amd64_cfgswitches_gcc()
    test_armel_cfgswitches_gcc()
    test_s390x_cfgswitches()
